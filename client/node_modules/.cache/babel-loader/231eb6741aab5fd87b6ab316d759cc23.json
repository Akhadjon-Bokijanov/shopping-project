{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.action.types';\nimport { googleProvider, githubProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nexport function* getSnapShotFromUserAuth(user, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user, additionalData);\n    const userSnapshot = yield userRef.get();\n    console.log(userSnapshot);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* googleSignIn() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* githubSignIn() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(githubProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSessions() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\nexport function* onGithubSignInStart() {\n  yield takeLatest(UserActionTypes.GITHUB_SIGN_IN_START, githubSignIn);\n}\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password); //yield createUserProfileDocument(user, {displayName});\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapShotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSucces() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onGithubSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSucces)]);\n}","map":{"version":3,"sources":["C:/ReactJS-Projects/shopping-project/client/src/redux/user/user.saga.js"],"names":["takeLatest","all","call","put","UserActionTypes","googleProvider","githubProvider","auth","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapShotFromUserAuth","user","additionalData","userRef","userSnapshot","get","console","log","id","data","error","googleSignIn","signInWithPopup","githubSignIn","isUserAuthenticated","userAuth","onCheckUserSessions","CHECK_USER_SESSION","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onGithubSignInStart","GITHUB_SIGN_IN_START","emailSignIn","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","signInAfterSignUp","onSignUpSucces","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\r\nimport { UserActionTypes } from './user.action.types';\r\nimport {googleProvider, githubProvider, auth, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\r\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess} from './user.actions';\r\n\r\nexport function* getSnapShotFromUserAuth(user, additionalData){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, user, additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n        console.log(userSnapshot)\r\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\r\n    }\r\n    catch(error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* googleSignIn(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapShotFromUserAuth(user);\r\n    }\r\n    catch(error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* githubSignIn(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(githubProvider)\r\n        yield getSnapShotFromUserAuth(user)\r\n    }\r\n    catch(error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n    try {\r\n        const userAuth = yield getCurrentUser()\r\n        if(!userAuth) return;\r\n        yield getSnapShotFromUserAuth(userAuth);\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onCheckUserSessions(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn)\r\n}\r\n\r\n\r\nexport function* onGithubSignInStart(){\r\n    yield takeLatest(UserActionTypes.GITHUB_SIGN_IN_START, githubSignIn)\r\n}\r\n\r\nexport function* emailSignIn({payload: {email, password}}){\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n\r\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn)\r\n}\r\n\r\nexport function* signOut(){\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* signUp({payload: {email, password, displayName}}){\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n\r\n        //yield createUserProfileDocument(user, {displayName});\r\n        yield put(signUpSuccess({user, additionalData: {displayName}}))\r\n    } catch (error) {\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* signInAfterSignUp({payload: {user, additionalData}}){\r\n    yield getSnapShotFromUserAuth(user, additionalData)\r\n}\r\n\r\nexport function* onSignUpSucces(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onGithubSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart),\r\n        call(onSignUpSucces)\r\n    ])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}