{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCollection = state => state.shop;\n\nexport const selectCollectionItems = createSelector([selectCollection], collections => collections.collection);\nexport const selectCollectionsForPreview = createSelector([selectCollectionItems], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollectionId = collectionUrlParam => createSelector([selectCollectionItems], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectCollection], collection => collection.isFetching);\nexport const selectIsCollectionLoaded = createSelector([selectCollection], collections => !!collections.collection);","map":{"version":3,"sources":["C:/ReactJS-Projects/shopping-project/client/src/redux/collection/collection.selector.js"],"names":["createSelector","selectCollection","state","shop","selectCollectionItems","collections","collection","selectCollectionsForPreview","Object","keys","map","key","selectCollectionId","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAUA,KAAK,CAACC,IAAzC;;AAEA,OAAO,MAAMC,qBAAqB,GAAGJ,cAAc,CAC/C,CAACC,gBAAD,CAD+C,EAE/CI,WAAW,IAAIA,WAAW,CAACC,UAFoB,CAA5C;AAKP,OAAO,MAAMC,2BAA2B,GAAGP,cAAc,CACrD,CAACI,qBAAD,CADqD,EAErDC,WAAW,IAAIA,WAAW,GAAGG,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,GAAzB,CAA6BC,GAAG,IAAIN,WAAW,CAACM,GAAD,CAA/C,CAAH,GAA2D,EAFhC,CAAlD;AAKP,OAAO,MAAMC,kBAAkB,GAAIC,kBAAD,IAAsBb,cAAc,CAClE,CAACI,qBAAD,CADkE,EAElEC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACQ,kBAAD,CAAd,GAAqC,IAFG,CAA/D;AAKP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACpD,CAACC,gBAAD,CADoD,EAEpDK,UAAU,IAAEA,UAAU,CAACS,UAF6B,CAAjD;AAKP,OAAO,MAAMC,wBAAwB,GAAGhB,cAAc,CAClD,CAACC,gBAAD,CADkD,EAElDI,WAAW,IAAG,CAAC,CAACA,WAAW,CAACC,UAFsB,CAA/C","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\n\r\nconst selectCollection = (state)=> state.shop;\r\n\r\nexport const selectCollectionItems = createSelector(\r\n    [selectCollection],\r\n    collections => collections.collection\r\n)\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollectionItems],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n)\r\n\r\nexport const selectCollectionId = (collectionUrlParam)=>createSelector(\r\n    [selectCollectionItems],\r\n    collections => collections ? collections[collectionUrlParam] : null\r\n)\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectCollection],\r\n    collection=>collection.isFetching\r\n)\r\n\r\nexport const selectIsCollectionLoaded = createSelector(\r\n    [selectCollection],\r\n    collections=> !!collections.collection\r\n)"]},"metadata":{},"sourceType":"module"}