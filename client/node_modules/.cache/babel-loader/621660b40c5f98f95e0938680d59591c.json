{"ast":null,"code":"const addItemToCard = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); //console.log(cartItems);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\n\nexport const removeItem = (cartItems, cartItemToRemove) => {\n  if (cartItemToRemove.quantity === 1) return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);else return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nexport default addItemToCard;","map":{"version":3,"sources":["C:/ReactJS-Projects/shopping-project/client/src/redux/cart/cart.utils.js"],"names":["addItemToCard","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItem","cartItemToRemove","filter"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAChD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAzB,CADgD,CAEhD;;AACA,MAAGH,gBAAH,EACA;AACI,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACjBA,QAAQ,CAACC,EAAT,KAAcJ,aAAa,CAACI,EAA5B,GACE,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADF,GAEEH,QAHC,CAAP;AAKH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACH,CAbD;;AAeA,OAAO,MAAMC,UAAU,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAA+B;AAErD,MAAGA,gBAAgB,CAACF,QAAjB,KAA6B,CAAhC,EACI,OAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAEA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA5D,CAAP,CADJ,KAGI,OAAOL,SAAS,CAACM,GAAV,CAAeF,QAAD,IACjBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACE,EAAC,GAAGD,QAAJ;AAAcG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA5C,GADF,GAEGH,QAHA,CAAP;AAMP,CAXM;AAYP,eAAeL,aAAf","sourcesContent":["const addItemToCard = (cartItems, cartItemToAdd) => {\r\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id)\r\n    //console.log(cartItems);\r\n    if(existingCartItem)\r\n    {\r\n        return cartItems.map((cartItem)=>\r\n            cartItem.id===cartItemToAdd.id \r\n            ? { ...cartItem, quantity: cartItem.quantity + 1 } \r\n            : cartItem\r\n        )\r\n    }\r\n\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }]\r\n}\r\n\r\nexport const removeItem = (cartItems, cartItemToRemove)=>{\r\n    \r\n    if(cartItemToRemove.quantity ===1)\r\n        return cartItems.filter(cartItem=>cartItem.id !== cartItemToRemove.id);\r\n    else\r\n        return cartItems.map((cartItem)=>\r\n            cartItem.id === cartItemToRemove.id \r\n            ? {...cartItem, quantity: cartItem.quantity - 1}\r\n            :  cartItem\r\n        )\r\n\r\n}\r\nexport default addItemToCard;\r\n"]},"metadata":{},"sourceType":"module"}