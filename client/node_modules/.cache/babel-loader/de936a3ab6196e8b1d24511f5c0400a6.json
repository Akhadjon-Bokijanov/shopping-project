{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS-Projects\\\\shopping-project\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, githubSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../customButton/customButton.component';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart,\n  githubSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    onChange: handleChange,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    value: password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    isGoogleSignIn: true,\n    type: \"button\",\n    onClick: googleSignInStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Sign in with Google\"), /*#__PURE__*/React.createElement(CustomButton, {\n    isGoogleSignIn: true,\n    type: \"button\",\n    onClick: githubSignInStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Sign in with GitHub\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  githubSignInStart: () => dispatch(githubSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/ReactJS-Projects/shopping-project/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","googleSignInStart","githubSignInStart","emailSignInStart","FormInput","CustomButton","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {googleSignInStart, githubSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\nimport './sign-in.styles.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../customButton/customButton.component';\r\n\r\nconst SignIn =({emailSignInStart, googleSignInStart, githubSignInStart})=>\r\n{\r\n    const [userCredentials, setCredentials] = useState({email: '', password: ''})\r\n    \r\n    const {email, password} = userCredentials\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        emailSignInStart(email, password);\r\n    }\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        event.preventDefault();\r\n        const {value, name} = event.target;\r\n\r\n        setCredentials(\r\n            {\r\n                ...userCredentials,\r\n                [name]: value\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in\">\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n            <form onSubmit = { handleSubmit }>\r\n                \r\n                <FormInput \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    value={email} \r\n                    required onChange={handleChange}\r\n                    label=\"Email\"\r\n                />\r\n                \r\n                <FormInput \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <div className=\"buttons\">\r\n                    <CustomButton type=\"submit\">Sign in</CustomButton>\r\n                    <CustomButton isGoogleSignIn type=\"button\" onClick={googleSignInStart}>\r\n                        Sign in with Google\r\n                    </CustomButton>\r\n                    <CustomButton isGoogleSignIn type=\"button\" onClick={githubSignInStart}>\r\n                        Sign in with GitHub\r\n                    </CustomButton>\r\n                </div>\r\n                </form>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch)=>({\r\n    googleSignInStart: ()=> dispatch(googleSignInStart()),\r\n    githubSignInStart: ()=> dispatch(githubSignInStart()),\r\n    emailSignInStart: (email, password)=>dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}