{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD46RyCA3hmOfcJrKls-1G8op8zTtJrJ3w\",\n  authDomain: \"my-shopping-project-8cb79.firebaseapp.com\",\n  databaseURL: \"https://my-shopping-project-8cb79.firebaseio.com\",\n  projectId: \"my-shopping-project-8cb79\",\n  storageBucket: \"my-shopping-project-8cb79.appspot.com\",\n  messagingSenderId: \"264303672184\",\n  appId: \"1:264303672184:web:dce15ac84cc97b21ec268d\",\n  measurementId: \"G-SVY651WV71\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error('error creating user: ', error.messsage);\n    }\n  }\n\n  return userRef;\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unSubscribe = auth.onAuthStateChanged(userAuth => {\n      unSubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const convertCollectionSnapShotToMap = collections => {\n  const transfromedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transfromedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const AddCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const githubProvider = new firebase.auth.GithubAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\ngithubProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport const signInWithGitHub = () => auth.signInWithPopup(githubProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/ReactJS-Projects/shopping-project/client/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","messsage","getCurrentUser","Promise","resolve","reject","unSubscribe","auth","onAuthStateChanged","convertCollectionSnapShotToMap","collections","transfromedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","AddCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","signInWithGitHub"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD46RyCA3hmOfcJrKls-1G8op8zTtJrJ3w\",\r\n    authDomain: \"my-shopping-project-8cb79.firebaseapp.com\",\r\n    databaseURL: \"https://my-shopping-project-8cb79.firebaseio.com\",\r\n    projectId: \"my-shopping-project-8cb79\",\r\n    storageBucket: \"my-shopping-project-8cb79.appspot.com\",\r\n    messagingSenderId: \"264303672184\",\r\n    appId: \"1:264303672184:web:dce15ac84cc97b21ec268d\",\r\n    measurementId: \"G-SVY651WV71\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const createUserProfileDocument = async(userAuth, additionalData) =>{\r\n    if(!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists)\r\n    {\r\n      const {displayName, email} = userAuth;\r\n\r\n      const createdAt = new Date();\r\n\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n        \r\n      }\r\n\r\n      catch(error)\r\n      {\r\n        console.error('error creating user: ', error.messsage);\r\n        \r\n      }\r\n\r\n    }\r\n    \r\n    return userRef;\r\n}\r\n\r\nexport const getCurrentUser = ()=>{\r\n  return new Promise((resolve, reject)=>{\r\n    const unSubscribe = auth.onAuthStateChanged(userAuth =>{\r\n      unSubscribe();\r\n      resolve(userAuth);\r\n    }, reject)\r\n  })\r\n}\r\n\r\nexport const convertCollectionSnapShotToMap = (collections)=>{\r\n  const transfromedCollection = collections.docs.map(doc => {\r\n    const {title, items} = doc.data();\r\n\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items\r\n    }\r\n  })\r\n\r\n  return transfromedCollection.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()]=collection;\r\n    return accumulator\r\n  }, {})\r\n}\r\n\r\n\r\nexport const AddCollectionAndDocuments = async (collectionKey, objectsToAdd)=>{\r\n  const collectionRef = firestore.collection(collectionKey);\r\n\r\n  const batch = firestore.batch();\r\n\r\n  objectsToAdd.forEach(obj => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, obj)\r\n  });\r\n\r\n  return await batch.commit();\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\nexport const githubProvider = new firebase.auth.GithubAuthProvider();\r\n\r\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\r\ngithubProvider.setCustomParameters({prompt: 'select_account'});\r\n\r\nexport const signInWithGoogle = ()=> auth.signInWithPopup(googleProvider);\r\nexport const signInWithGitHub = ()=> auth.signInWithPopup(githubProvider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}