{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './collection.action.types';\nimport { firestore, convertCollectionSnapShotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsError } from './collection.action';\nexport function* fetchCollectionsAscy() {\n  try {\n    const collectionRef = yield firestore.collection('collections');\n    const snapShop = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapShotToMap, snapShop);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsError(error));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAscy);\n}\nexport function* collectionSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/ReactJS-Projects/shopping-project/client/src/redux/collection/collection.saga.js"],"names":["takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionSnapShotToMap","fetchCollectionsSuccess","fetchCollectionsError","fetchCollectionsAscy","collectionRef","collection","snapShop","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START","collectionSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SAASC,uBAAT,EAAkCC,qBAAlC,QAA+D,qBAA/D;AAEA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,MAAI;AACA,UAAMC,aAAa,GAAG,MAAML,SAAS,CAACM,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,8BAAD,EAAiCM,QAAjC,CAAjC;AAEA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH,GAND,CAOA,OAAMC,KAAN,EAAY;AACR,UAAMb,GAAG,CAACM,qBAAqB,CAACO,KAAD,CAAtB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,UAAU,CAACI,eAAe,CAACa,uBAAjB,EAA0CR,oBAA1C,CAAhB;AACH;AAED,OAAO,UAAUS,eAAV,GAA2B;AAC9B,QAAMf,GAAG,CAAC,CACNF,IAAI,CAACe,qBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {takeLatest, call, put, all} from 'redux-saga/effects';\r\nimport ShopActionTypes from './collection.action.types';\r\nimport {firestore, convertCollectionSnapShotToMap} from \"../../firebase/firebase.utils\";\r\nimport { fetchCollectionsSuccess, fetchCollectionsError } from './collection.action'\r\n\r\nexport function* fetchCollectionsAscy(){\r\n    \r\n    try {\r\n        const collectionRef = yield firestore.collection('collections');\r\n        const snapShop = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionSnapShotToMap, snapShop);\r\n\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n    }\r\n    catch(error){\r\n        yield put(fetchCollectionsError(error))\r\n    }\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAscy)\r\n}\r\n\r\nexport function* collectionSagas(){\r\n    yield all([\r\n        call(fetchCollectionsStart),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}